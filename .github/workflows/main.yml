# This is a basic workflow to help you get started with Actions 

name: Digital Ocean Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  debloy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: build client
        run: npm install && npm run-script build
    
      - name: deploy client sources to DO
        # You may pin to the exact commit or the version.
        # uses: easingthemes/ssh-deploy@4042d3876fbba3e76b95c16a18830ab0c152aeec
        uses: easingthemes/ssh-deploy@v2.1.4
        with:
          # Private Key
          SSH_PRIVATE_KEY: ${{ secrets.SSHKEY }}
          # Remote host
          REMOTE_HOST: ${{ secrets.HOST }}
          # Remote user
          REMOTE_USER: ${{ secrets.USER }}
          # Remote port
          REMOTE_PORT: ${{ secrets.PORT }}
          # Source directory
          SOURCE: .
          # Target directory
          TARGET: /home/apps/dot-core/doto-core-page
          # Arguments to pass to rsync
          ARGS: ''

#      - name: deploy services sources to DO
#        uses: easingthemes/ssh-deploy@v2.1.4
#        with:
#          # Private Key
#          SSH_PRIVATE_KEY: ${{ secrets.SSHKEY }}
#          # Remote host
#          REMOTE_HOST: ${{ secrets.HOST }}
#          # Remote user
#          REMOTE_USER: ${{ secrets.USER }}
#          # Remote port
#          REMOTE_PORT: ${{ secrets.PORT }}
#          # Source directory
#          SOURCE: services/
#          # Target directory
#          TARGET: /home/apps/universal-solution/services
#          # Arguments to pass to rsync
#          ARGS: ''
#
#      # The email services sources are at services/email.
#      # It's a Dockerized service with docker-compose in place.
#      # The focus in this step is to install Docker on the host if it's not installed, then start the docker compose.
#      - name: start email service
#        uses: garygrossgarten/github-action-ssh@release
#        with:
#          command: sudo ln -f -s /snap/bin/docker /usr/bin/docker &&
#                   sudo ln -f -s /snap/bin/docker-compose /usr/bin/docker-compose &&
#                   cd ../home/apps/universal-solution/services/email &&
#                   docker-compose down &&
#                   docker-compose build &&
#                   docker-compose up -d
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          passphrase: ''
#          privateKey: ${{ secrets.SSHKEY }}

          
          
          
   
        
       

          
          
   
        
       
